name: ci

on:
  pull_request:
    branches: [main]

jobs:
  ci:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:15.1
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres

        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      selenium_chrome:
        image: selenium/standalone-chrome-debug

    container:
      image: ruby:3.1.3
      env:
        RAILS_ENV: test
        DATABASE_HOST: db
        SELENIUM_DRIVER_URL: http://selenium_chrome:4444/wd/hub
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      options: --name app
    steps:
      - name: Check out source code
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Cache bundle gems
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-
            ${{ runner.os }}-

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "19.4"

      - name: Install Bundler
        run: gem install bundler --no-document -v $(grep "BUNDLED WITH" -1 Gemfile.lock | tail -n 1)

      - name: Bundle install
        run: |
          bundle config set --local path 'vendor/bundle'
          bundle install --jobs 4 --retry 3

      - name: Yarn install
        run: |
          corepack enable
          corepack prepare yarn@stable --activate
          yarn set version 3.4.1
          yarn install

      - name: DB setup
        run: bundle exec rails db:setup

      - name: Build CSS
        run: bin/rails css:build

      - name: Build JavaScript
        run: bin/rails javascript:build

      - name: Run lint
        run: bin/lint

      - name: Run jest
        run: yarn jest

      - name: Run rspec
        run: bundle exec rspec -t ~login_required
        continue-on-error: true
        id: rspec

      - name: Archive screenshots as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: test-screenshots
          path: /__w/kpi-tree-generator/kpi-tree-generator/tmp/capybara/*.png

      - name: Check rspec result
        run: |
          if [ "${{ steps.rspec.outcome }}" != "success" ]; then
            exit 1
          fi
